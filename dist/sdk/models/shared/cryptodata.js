"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends =
  (this && this.__extends) ||
  (function () {
    var extendStatics = function (d, b) {
      extendStatics =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (d, b) {
            d.__proto__ = b;
          }) ||
        function (d, b) {
          for (var p in b)
            if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
      return extendStatics(d, b);
    };
    return function (d, b) {
      if (typeof b !== "function" && b !== null)
        throw new TypeError(
          "Class extends value " + String(b) + " is not a constructor or null"
        );
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype =
        b === null
          ? Object.create(b)
          : ((__.prototype = b.prototype), new __());
    };
  })();
var __decorate =
  (this && this.__decorate) ||
  function (decorators, target, key, desc) {
    var c = arguments.length,
      r =
        c < 3
          ? target
          : desc === null
          ? (desc = Object.getOwnPropertyDescriptor(target, key))
          : desc,
      d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if ((d = decorators[i]))
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
var __metadata =
  (this && this.__metadata) ||
  function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.CryptoData = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var CryptoData = /** @class */ (function (_super) {
  __extends(CryptoData, _super);
  function CryptoData() {
    return (_super !== null && _super.apply(this, arguments)) || this;
  }
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "blockchains" }),
      __metadata("design:type", Array),
    ],
    CryptoData.prototype,
    "blockchains",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "contracts" }),
      __metadata("design:type", Array),
    ],
    CryptoData.prototype,
    "contracts",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "id" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "id",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "liquidity" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "liquidity",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "logo" }),
      __metadata("design:type", String),
    ],
    CryptoData.prototype,
    "logo",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "market_cap" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "marketCap",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "name" }),
      __metadata("design:type", String),
    ],
    CryptoData.prototype,
    "name",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "price",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price_change_1h" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "priceChange1h",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price_change_1y" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "priceChange1y",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price_change_24h" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "priceChange24h",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price_change_30d" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "priceChange30d",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "price_change_7d" }),
      __metadata("design:type", Number),
    ],
    CryptoData.prototype,
    "priceChange7d",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "symbol" }),
      __metadata("design:type", String),
    ],
    CryptoData.prototype,
    "symbol",
    void 0
  );
  __decorate(
    [
      (0, utils_1.SpeakeasyMetadata)(),
      (0, class_transformer_1.Expose)({ name: "decimals" }),
      __metadata("design:type", String),
    ],
    CryptoData.prototype,
    "decimals",
    void 0
  );
  return CryptoData;
})(utils_1.SpeakeasyBase);
exports.CryptoData = CryptoData;
